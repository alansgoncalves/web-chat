{"ast":null,"code":"import _slicedToArray from\"/Users/alan/projects/rock-web-chat/client/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useContext,useEffect,useState}from\"react\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";var ChatContext=/*#__PURE__*/createContext();var ChatProvider=function ChatProvider(_ref){var children=_ref.children;var _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedChat=_useState2[0],setSelectedChat=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),chats=_useState6[0],setChats=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),notification=_useState8[0],setNotification=_useState8[1];var history=useHistory();useEffect(function(){var userInfo=JSON.parse(localStorage.getItem(\"userInfo\"));setUser(userInfo);if(!userInfo)history.push(\"/\");},[history]);return/*#__PURE__*/_jsx(ChatContext.Provider,{value:{selectedChat:selectedChat,setSelectedChat:setSelectedChat,user:user,setUser:setUser,chats:chats,setChats:setChats,notification:notification,setNotification:setNotification},children:children});};export var ChatState=function ChatState(){return useContext(ChatContext);};export default ChatProvider;","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useHistory","ChatContext","ChatProvider","children","selectedChat","setSelectedChat","user","setUser","chats","setChats","notification","setNotification","history","userInfo","JSON","parse","localStorage","getItem","push","ChatState"],"sources":["/Users/alan/projects/rock-web-chat/client/frontend/src/Context/ChatProvider.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [chats, setChats] = useState([]);\n  const [notification, setNotification] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        chats,\n        setChats,\n        notification,\n        setNotification,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n"],"mappings":"wIAAA,MAAOA,MAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,SAA3C,CAAsDC,QAAtD,KAAsE,OAAtE,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,2CAEA,GAAMC,YAAW,cAAGL,aAAa,EAAjC,CAEA,GAAMM,aAAY,CAAG,QAAfA,aAAe,MAAkB,IAAfC,SAAe,MAAfA,QAAe,CACrC,cAAwCJ,QAAQ,EAAhD,wCAAOK,YAAP,eAAqBC,eAArB,eACA,eAAwBN,QAAQ,EAAhC,yCAAOO,IAAP,eAAaC,OAAb,eACA,eAA0BR,QAAQ,CAAC,EAAD,CAAlC,yCAAOS,KAAP,eAAcC,QAAd,eACA,eAAwCV,QAAQ,CAAC,EAAD,CAAhD,yCAAOW,YAAP,eAAqBC,eAArB,eAEA,GAAMC,QAAO,CAAGZ,UAAU,EAA1B,CAEAF,SAAS,CAAC,UAAM,CACd,GAAMe,SAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB,CACAV,OAAO,CAACM,QAAD,CAAP,CAEA,GAAI,CAACA,QAAL,CAAeD,OAAO,CAACM,IAAR,CAAa,GAAb,EAChB,CALQ,CAKN,CAACN,OAAD,CALM,CAAT,CAOA,mBACE,KAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLR,YAAY,CAAZA,YADK,CAELC,eAAe,CAAfA,eAFK,CAGLC,IAAI,CAAJA,IAHK,CAILC,OAAO,CAAPA,OAJK,CAKLC,KAAK,CAALA,KALK,CAMLC,QAAQ,CAARA,QANK,CAOLC,YAAY,CAAZA,YAPK,CAQLC,eAAe,CAAfA,eARK,CADT,UAYGR,QAZH,EADF,CAgBD,CA/BD,CAiCA,MAAO,IAAMgB,UAAS,CAAG,QAAZA,UAAY,EAAM,CAC7B,MAAOtB,WAAU,CAACI,WAAD,CAAjB,CACD,CAFM,CAIP,cAAeC,aAAf"},"metadata":{},"sourceType":"module"}