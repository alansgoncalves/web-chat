{"ast":null,"code":"var _jsxFileName = \"/Users/alan/projects/back-end/web-chat/client/frontend/src/components/MyChats.js\",\n    _s = $RefreshSig$();\n\nimport { useToast, Button } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { Box, Stack, Text } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport ChatLoading from \"./ChatLoading\";\nimport { getSender } from \"../config/ChatLogics\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyChats = _ref => {\n  _s();\n\n  let {\n    fetchAgain\n  } = _ref;\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config); // console.log(data);\n\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      display: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"My Chats\", /*#__PURE__*/_jsxDEV(GroupChatModal, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          display: \"flex\",\n          fontSize: {\n            base: \"17px\",\n            md: \"10px\",\n            lg: \"17px\"\n          },\n          rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 24\n          }, this),\n          children: \"New Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"#F8F8F8\",\n      w: \"100%\",\n      h: \"100%\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\",\n      children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n        overflowY: \"scroll\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => setSelectedChat(chat),\n          cursor: \"pointer\",\n          bg: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n          color: selectedChat === chat ? \"white\" : \"black\",\n          px: 3,\n          py: 2,\n          borderRadius: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, chat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyChats, \"YQd3AWel/HFwk7lFM1/6tXxZbeA=\", false, function () {\n  return [useToast];\n});\n\n_c = MyChats;\nexport default MyChats;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["useToast","Button","React","useEffect","useState","ChatState","Box","Stack","Text","axios","AddIcon","ChatLoading","getSender","GroupChatModal","MyChats","fetchAgain","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","toast","fetchChats","config","headers","Authorization","token","data","get","error","title","description","status","duration","isClosable","position","JSON","parse","localStorage","getItem","base","md","lg","map","chat","isGroupChat","users","chatName","_id"],"sources":["/Users/alan/projects/back-end/web-chat/client/frontend/src/components/MyChats.js"],"sourcesContent":["import { useToast, Button } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { Box, Stack, Text } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport ChatLoading from \"./ChatLoading\";\nimport { getSender } from \"../config/ChatLogics\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      // console.log(data);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        display=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            display=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        display=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}