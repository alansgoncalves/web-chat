[{"/Users/alan/projects/back-end/web-chat/frontend/src/index.js":"1","/Users/alan/projects/back-end/web-chat/frontend/src/App.js":"2","/Users/alan/projects/back-end/web-chat/frontend/src/Pages/HomePage.js":"3","/Users/alan/projects/back-end/web-chat/frontend/src/Pages/ChatPage.js":"4","/Users/alan/projects/back-end/web-chat/frontend/src/components/Authentication/Signup.js":"5","/Users/alan/projects/back-end/web-chat/frontend/src/components/Authentication/Login.js":"6","/Users/alan/projects/back-end/web-chat/frontend/src/Context/ChatProvider.js":"7","/Users/alan/projects/back-end/web-chat/frontend/src/components/MyChats.js":"8","/Users/alan/projects/back-end/web-chat/frontend/src/components/ChatBox.js":"9","/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/SideDrawer.js":"10","/Users/alan/projects/back-end/web-chat/frontend/src/components/ChatLoading.js":"11","/Users/alan/projects/back-end/web-chat/frontend/src/config/ChatLogics.js":"12","/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/ProfileModal.js":"13","/Users/alan/projects/back-end/web-chat/frontend/src/components/UserAvatar/UserListItem.js":"14","/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/GroupChatModel.js":"15","/Users/alan/projects/back-end/web-chat/frontend/src/components/UserAvatar/UserBadgeItem.js":"16"},{"size":490,"mtime":1658929541596,"results":"17","hashOfConfig":"18"},{"size":341,"mtime":1657894183109,"results":"19","hashOfConfig":"18"},{"size":1491,"mtime":1658937481336,"results":"20","hashOfConfig":"18"},{"size":637,"mtime":1658841048611,"results":"21","hashOfConfig":"18"},{"size":5355,"mtime":1658930835751,"results":"22","hashOfConfig":"18"},{"size":3210,"mtime":1658939540542,"results":"23","hashOfConfig":"18"},{"size":928,"mtime":1658937900247,"results":"24","hashOfConfig":"18"},{"size":3015,"mtime":1658861505120,"results":"25","hashOfConfig":"18"},{"size":110,"mtime":1658841048611,"results":"26","hashOfConfig":"18"},{"size":5254,"mtime":1658930922982,"results":"27","hashOfConfig":"18"},{"size":313,"mtime":1658841048611,"results":"28","hashOfConfig":"18"},{"size":127,"mtime":1658842767801,"results":"29","hashOfConfig":"18"},{"size":1736,"mtime":1658841048612,"results":"30","hashOfConfig":"18"},{"size":824,"mtime":1658841048612,"results":"31","hashOfConfig":"18"},{"size":4995,"mtime":1659034914568,"results":"32","hashOfConfig":"18"},{"size":486,"mtime":1659029463101,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"xczp5k",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alan/projects/back-end/web-chat/frontend/src/index.js",[],[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/App.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/Pages/HomePage.js",["85"],[],"import React, { useEffect } from \"react\";\nimport { Container, Box, Text } from \"@chakra-ui/react\";\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nconst HomePage = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n    if (user) {\n      history.push(\"/chats\");\n    }\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n        p={3}\n        bg={\"white\"}\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"base\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\" color=\"black\">\n          web-ch@t\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"base\" borderWidth=\"1px\">\n        <Tabs variant=\"soft-rounded\" colorScheme=\"green\">\n          <TabList mb=\"1em\">\n            <Tab width=\"50%\">Entre</Tab>\n            <Tab width=\"50%\">Cadastre-se</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","/Users/alan/projects/back-end/web-chat/frontend/src/Pages/ChatPage.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/Authentication/Signup.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/Authentication/Login.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/Context/ChatProvider.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/MyChats.js",["86"],[],"import { useToast, Button } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { Box, Stack, Text } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport ChatLoading from \"./ChatLoading\";\nimport { getSender } from \"../config/ChatLogics\";\nimport GroupChatModel from \"./miscellaneous/GroupChatModel\";\n\nconst MyChats = () => {\n  const [loggedUser, setLoggedUser] = useState();\n  const { user, selectedChat, setSelectedChat, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      // console.log(data);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, []);\n\n  return (\n    <Box\n      display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        display=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModel>\n          <Button\n            display=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModel>\n      </Box>\n      <Box\n        display=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","/Users/alan/projects/back-end/web-chat/frontend/src/components/ChatBox.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/SideDrawer.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/ChatLoading.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/config/ChatLogics.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/ProfileModal.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/UserAvatar/UserListItem.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/GroupChatModel.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/UserAvatar/UserBadgeItem.js",[],[],{"ruleId":"87","severity":1,"message":"88","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":18},{"ruleId":"91","severity":1,"message":"92","line":43,"column":6,"nodeType":"93","endLine":43,"endColumn":8,"suggestions":"94"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.","ArrayExpression",["95"],{"desc":"96","fix":"97"},"Update the dependencies array to be: [fetchChats]",{"range":"98","text":"99"},[1243,1245],"[fetchChats]"]