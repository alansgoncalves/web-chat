[{"/Users/alan/projects/back-end/web-chat/frontend/src/index.js":"1","/Users/alan/projects/back-end/web-chat/frontend/src/App.js":"2","/Users/alan/projects/back-end/web-chat/frontend/src/Pages/HomePage.js":"3","/Users/alan/projects/back-end/web-chat/frontend/src/Pages/ChatPage.js":"4","/Users/alan/projects/back-end/web-chat/frontend/src/components/Authentication/Signup.js":"5","/Users/alan/projects/back-end/web-chat/frontend/src/components/Authentication/Login.js":"6","/Users/alan/projects/back-end/web-chat/frontend/src/Context/ChatProvider.js":"7","/Users/alan/projects/back-end/web-chat/frontend/src/components/MyChats.js":"8","/Users/alan/projects/back-end/web-chat/frontend/src/components/ChatBox.js":"9","/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/SideDrawer.js":"10","/Users/alan/projects/back-end/web-chat/frontend/src/components/ChatLoading.js":"11","/Users/alan/projects/back-end/web-chat/frontend/src/config/ChatLogics.js":"12","/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/ProfileModal.js":"13","/Users/alan/projects/back-end/web-chat/frontend/src/components/UserAvatar/UserListItem.js":"14","/Users/alan/projects/back-end/web-chat/frontend/src/components/UserAvatar/UserBadgeItem.js":"15","/Users/alan/projects/back-end/web-chat/frontend/src/components/SingleChat.js":"16","/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/GroupChatModal.js":"17","/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/UpdateGroupChatModal.js":"18","/Users/alan/projects/back-end/web-chat/frontend/src/components/ScrollableChat.js":"19"},{"size":490,"mtime":1659361139675,"results":"20","hashOfConfig":"21"},{"size":341,"mtime":1659195908234,"results":"22","hashOfConfig":"21"},{"size":1481,"mtime":1659126744170,"results":"23","hashOfConfig":"21"},{"size":826,"mtime":1659197587342,"results":"24","hashOfConfig":"21"},{"size":5526,"mtime":1659360439424,"results":"25","hashOfConfig":"21"},{"size":3352,"mtime":1659361446105,"results":"26","hashOfConfig":"21"},{"size":976,"mtime":1659470109916,"results":"27","hashOfConfig":"21"},{"size":3099,"mtime":1659197248057,"results":"28","hashOfConfig":"21"},{"size":631,"mtime":1659193534249,"results":"29","hashOfConfig":"21"},{"size":6285,"mtime":1659477134509,"results":"30","hashOfConfig":"21"},{"size":313,"mtime":1658841048611,"results":"31","hashOfConfig":"21"},{"size":1337,"mtime":1659376016317,"results":"32","hashOfConfig":"21"},{"size":1736,"mtime":1658841048612,"results":"33","hashOfConfig":"21"},{"size":824,"mtime":1658841048612,"results":"34","hashOfConfig":"21"},{"size":486,"mtime":1659029463101,"results":"35","hashOfConfig":"21"},{"size":7117,"mtime":1659471054230,"results":"36","hashOfConfig":"21"},{"size":4995,"mtime":1659105279908,"results":"37","hashOfConfig":"21"},{"size":6994,"mtime":1659363765706,"results":"38","hashOfConfig":"21"},{"size":1603,"mtime":1659378319328,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"gewne1",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/alan/projects/back-end/web-chat/frontend/src/index.js",[],[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/App.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/Pages/HomePage.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/Pages/ChatPage.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/Authentication/Signup.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/Authentication/Login.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/Context/ChatProvider.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/MyChats.js",[],["99"],"/Users/alan/projects/back-end/web-chat/frontend/src/components/ChatBox.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/SideDrawer.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/ChatLoading.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/config/ChatLogics.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/ProfileModal.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/UserAvatar/UserListItem.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/UserAvatar/UserBadgeItem.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/SingleChat.js",["100","101"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Text,\n  IconButton,\n  Spinner,\n  FormControl,\n  Input,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { ChevronLeftIcon } from \"@chakra-ui/icons\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport io from \"socket.io-client\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animation/typing.json\";\n\nconst ENDPOINT = \"http://localhost:3001/\";\nlet socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState();\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const { user, selectedChat, setSelectedChat, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n\n      setMessages(data);\n      setLoading(false);\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message received\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare ||\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat._id,\n          },\n          config\n        );\n\n        setNewMessage(\"\");\n        setMessages([...messages, data]);\n        socket.emit(\"new message\", data);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"warning\",\n          duration: 4000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  const typingHandler = (event) => {\n    setNewMessage(event.target.value);\n\n    //Typing Indicator Logic\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    let timerLength = 3000;\n    setTimeout(() => {\n      let timeNow = new Date().getTime();\n      let timeDiff = timeNow - lastTypingTime;\n\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            display=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              display={{ base: \"flex\", md: \"none\" }}\n              icon={<ChevronLeftIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {!selectedChat.isGroupChat ? (\n              <>\n                {getSender(user, selectedChat.users)}\n                <ProfileModal user={getSenderFull(user, selectedChat.users)} />\n              </>\n            ) : (\n              <>\n                {selectedChat.chatName.toUpperCase()}\n                <UpdateGroupChatModal\n                  fetchAgain={fetchAgain}\n                  setFetchAgain={setFetchAgain}\n                  fetchMessages={fetchMessages}\n                />\n              </>\n            )}\n          </Text>\n          <Box\n            display=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n            <FormControl onKeyDown={sendMessage} isRequired mt={3}>\n              {isTyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                onChange={typingHandler}\n                value={newMessage || \"\"}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          h=\"100%\"\n        >\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/GroupChatModal.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/miscellaneous/UpdateGroupChatModal.js",[],[],"/Users/alan/projects/back-end/web-chat/frontend/src/components/ScrollableChat.js",[],[],{"ruleId":"102","severity":1,"message":"103","line":44,"column":6,"nodeType":"104","endLine":44,"endColumn":18,"suggestions":"105","suppressions":"106"},{"ruleId":"102","severity":1,"message":"107","line":86,"column":6,"nodeType":"104","endLine":86,"endColumn":8,"suggestions":"108"},{"ruleId":"102","severity":1,"message":"109","line":91,"column":6,"nodeType":"104","endLine":91,"endColumn":20,"suggestions":"110"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.","ArrayExpression",["111"],["112"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["113"],"React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["114"],{"desc":"115","fix":"116"},{"kind":"117","justification":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [fetchAgain, fetchChats]",{"range":"123","text":"124"},"directive","","Update the dependencies array to be: [user]",{"range":"125","text":"126"},"Update the dependencies array to be: [fetchMessages, selectedChat]",{"range":"127","text":"128"},[1317,1329],"[fetchAgain, fetchChats]",[2359,2361],"[user]",[2451,2465],"[fetchMessages, selectedChat]"]